class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p == null && q == null) return true;
        if(p == null || q == null) return false;
        if(p.val != q.val) return false;
        // Recursively compare left and right subtree
        return isSameTree(p.left , q.left) && isSameTree(p.right, q.right);

        
    }
}
Explaination:

 Breakdown with a Mnemonic
Use this simple mnemonic:

"🧱 S.A.M.E."
Each letter helps you remember the logic:

S → Structure: Check both trees' structure (null cases)

A → All nodes must exist: If one is null and the other isn't → false

M → Match values at each node

E → Explore left & right recursively

🔁 Easy Version (Hindi-friendly explanation):
Dono node null hain? → true
Ek node null hai? → false
Node ke values same nahi? → false
Baaki dono ka left aur right compare karo

