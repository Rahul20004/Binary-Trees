class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> ll = new ArrayList<>();
        
        if (root == null) return ll;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);

        while (!queue.isEmpty()) {
            int n = queue.size();
            List<Integer> l = new ArrayList<>();

            while(n !=0) {
                TreeNode temp = queue.poll();
                l.add(temp.val);
                
                if (temp.left != null) queue.offer(temp.left);
                if (temp.right != null) queue.offer(temp.right);
                n--;
            }

            ll.add(l);
        }

        Collections.reverse(ll);
        return ll;
    }
}
